# -*- coding: utf-8 -*-
"""pplab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YnxWebIltZZeO3joJPNEFpXMEsWIvNGt
"""

name = input("Enter your name")
age = int(input("Enter your age"))
study = input("Your study please")
print("Your biodata:")
print("Iam " + name)
print(age)
print("Iam pursuing my degree in " + study)

for num in range(1500,2700):
    if(num%7 == 0):
        print(num,"is divisible by 7")
    if(num%5 == 0):
        print(num,"is a multiple 5")

num1 = int(input())
num2 = int(input())
num3 = int(input())
num4 = int(input())
num5 = int(input())
print("Total marks are ", num1 + num2 + num3 + num4 + num5)
print("Average of the total mark is ",(num1+num2+num3+num4+num5)/5)

num_1 = int(input())
num_2 = int(input())
operator = input()
# addition, subtraction, division and multiplication are similar to math
if operator == '+':
    result = num_1+num_2
elif operator == '-':
    result = num_1-num_2
elif operator == '*':
    result = num_1*num_2
if operator == '//':
    result = num_1 // num_2
if operator == '%':
    result = num_1 % num_2
if operator == '**':
    result = num_1 ** num_2
print(result)

#Taking the input for three sides
side1 = float(input())
side2 = float(input())
side3 = float(input())
if(side1==side2 and side2==side3):
    print("Equilateral Triangle")
elif(side1==side2 or side2==side3 or side1==side3 ):
    print("Isoceles Triangle")
else:
    print("Scalene Triangle")

def swap(num1,num2):
    num_1 = num1
    num1 = (num1+num2)-num1
    num2 = (num_1+num2)-num2
    return num1,num2

def swaptemp(a,b):
    temp = b
    b = a
    a = temp
    return a,b

print(swaptemp(22,55))
print(swap(34,87))

number = int(input())
for i in range(1,number+1):
    if(i%3==0 and i%5==0):
        print("FizzBuzz")
    elif(i%3==0):
        print("Fizz")
    elif(i%5==0):
        print("Buzz")
    else:
        print(i)

a = int(input())
b = int(input())
c = int(input())
s = (a+b+c)/2
area = (s*(s-a)*(s-b)*(s-c))**0.5
print(area,"units")

def sqrt_power(number):
    if number < 0:
        return "Square root is not defined for negative numbers"
    else:
        return number ** 0.5

number = float(input("Enter a number: "))
print("Square root using power of 0.5:", sqrt_power(number))

def triangle_type(a, b, c):
    # Sort the sides in ascending order
    sides = [a, b, c]
    sides.sort()

    # Check if the triangle is valid
    if sides[0] + sides[1] <= sides[2]:
        return "Invalid Triangle"

    # Determine the type of triangle based on the Pythagorean theorem
    if sides[2] ** 2 < sides[0] ** 2 + sides[1] ** 2:
        return "Acute Triangle"
    elif sides[2] ** 2 == sides[0] ** 2 + sides[1] ** 2:
        return "Right-Angled Triangle"
    else:
        return "Obtuse Triangle"

# Take input from the user for the lengths of the sides
a = float(input("Enter the length of side a: "))
b = float(input("Enter the length of side b: "))
c = float(input("Enter the length of side c: "))

# Determine the type of triangle and print the result
print("The triangle is", triangle_type(a, b, c))

number1 = int(input())
number2 = int(input())
number3 = int(input())
if(number1>number2 and number1>number3):
    print("GREATEST among the threee is ",number1)
elif(number2>number1 and number2>number3):
    print("GREATEST among the threee is ",number2)
elif(number3>number1 and number3>number2):
    print("GREATEST among the threee is ",number3)
else:
    print("All three are equal")

def calculate_grade(marks):
    if marks >= 90:
        return 'A'
    elif marks >= 80:
        return 'B'
    elif marks >= 70:
        return 'C'
    elif marks >= 60:
        return 'D'
    else:
        return 'F'


marks = float(input("Enter the marks (0-100): "))
if 0 <= marks <= 100:
    grade = calculate_grade(marks)
else:
    print("Marks should be between 0 and 100. Please try again.")
print(f"The grade for {marks} marks is: {grade}")

year = int(input("Enter a year: "))

if year % 4 == 0:
    if year % 100 == 0 and year % 400 == 0:
        print("Leap and also a centurion year")
    else:
        print("Leap year but not a centurion year")
else:
    print("Not a leap year")

import random

target_number = random.randint(1, 9)  # Generates a random integer between 1 and 9
n = 0
while n != 3:
    guess = int(input("Enter a number you guess: "))
    if guess == target_number:
        print("Well guessed!")
        n += 1
        break
    else:
        print("Try again")
        n += 1
print('sorry')
print('The number was:',target_number)

list1 = [i for i in range(1, 21)]
list2 = [i**2 for i in range(1, 21)]

print(list1)
print(list2)

number = int(input())
i=1
while(i<=number):
    j=1
    while(j<=i):
        print("*",end=" ")
        j += 1
    print()
    i += 1

def sum_digits(num):
    sum = 0
    while  num!=0:
        digit = num%10
        sum += digit
        num = num//10
    return sum
input_num = int(input())
sum_digits(input_num)

#Check for the palindrome of a number
number = int(input())
reverse = 0
t = number
while(t>0):
    remainder = t % 10
    reverse = reverse * 10 + remainder
    t = t // 10

if(reverse==number):
    print("PALINDROME NUMBER")
else:
    print("Not a PALINDROME NUMBER")

def isboolean(num1,num2):
    if num1%num2==0 or  num2%num1==0:
        return True
    else:
        return False
isboolean(16,3)

#To check for a prime number
number = int(input())
count = 0
for i in range(1,number+1):
    if(number%i==0):
        count = count + 1
if(count==2):
    print("PRIME number")

def check(input_num):
    low_lim = int(input("Enter the lower limit: "))
    up_lim = int(input("Enter the upper limit: "))
    for i in range(low_lim, up_lim):
        if input_num == i:
            return True
    return False

print(check(6))

def Armstrong():
    number = int(input("Enter a number"))
    armstrong = 0
    t = number
    while(t>0):
        remainder = t % 10
        armstrong = remainder * remainder * remainder + armstrong
        t = t // 10
    if(number == armstrong):
        print("It is an Armstrong number")
Armstrong()

def is_perfect_number(num):
    or_num = num
    divisor_sum = 0
    for i in range(1,num):
        if  num%i == 0:
            divisor_sum += i
            print("factor:",i)
    return divisor_sum == or_num


num = int(input("Enter a number to check if it's perfect: "))
if num <= 0:
    print("Please enter a positive integer.")
if is_perfect_number(num):
    print(f"{num} is a perfect number.")
else:
    print(f"{num} is not a perfect number.")

#Factorial of a given number
number = int(input())
factorial = 1
for i in range(1,number+1):
    factorial = factorial * i
print(factorial)

def fibonacci(n):
    first = 0
    second = 1
    for c in range(0,n):
        if c==0 or c== 1:
            next = c
        else:
            next = first+second
            first = second
            second = next
        print(next)
fibonacci(11)

def prime(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count == 2

input_number = int(input("Enter a number: "))

def prime_less(input_num):
    for i in range(input_num - 1, 1, -1):  # Start from input_num - 1 down to 2
        if prime(i):
            print(i)


prime_less(input_number)