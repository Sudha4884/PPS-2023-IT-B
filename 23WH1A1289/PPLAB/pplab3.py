# -*- coding: utf-8 -*-
"""pplab3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KCNKBCuK5YPMtDubCGU65q8e8J-GeTwN
"""

import numpy as np
list1= [67,45,23,10]
tup = (12,67,89,87,32)
arr = np.array(list1)
arr1 = np.array(tup)
print('list:',list1)
print('tuple:',tup)
print('array:',arr)
print('array:',arr1)

import numpy as np
list1= [int(num) for num in input().split()]
list2 = []
size = int(input())
tup = (89,67,34,21)
for i in range(size):
    list2.append(int(input()))

arr = np.array(list1)
arr1 = np.array(tup)
print(list1)
print(tup)
print(arr)
print(arr1)

li = [[1,2,3],[4,5,6],[7,8,9]]
mat1 = np.array(li)
mat2 = np.matrix(li)
print(mat1)
print(mat2)

import numpy as  np
#listy = [int(a) for a in input().split()]
listy =  [1,2,3,4]
print(listy)
mat = np.array(listy)
mat.resize(1,4)
print(mat)

rows = int(input())
cols = int(input())
array = []
for i in range(rows):
    li = []
    for j in range(cols):
        li.append(int(input()))
    array.append(li)
print(np.array(array))
for i in range(rows):
    for j in range(cols):
        print(array[i][j],end = " ")
    print()

R = int(input("Enter the number of rows:"))
C = int(input("Enter the number of columns:"))
R1 = int(input("Enter the number of rows:"))
C1 = int(input("Enter the number of columns:"))


matrix1 = []
print("Enter the entries rowwise:")


for i in range(R):
    a1 =[]
    for j in range(C):
         a1.append(int(input()))
    matrix1.append(a1)


for i in range(R):
    for j in range(C):
        print(matrix1[i][j], end = " ")
    print()


matrix2 = []
print("Enter the entries rowwise:")


for i in range(R1):
    a2 =[]
    for j in range(C1):
         a2.append(int(input()))
    matrix2.append(a2)


for i in range(R1):
    for j in range(C1):
        print(matrix2[i][j], end = " ")
    print()2
result = []


for i in range(R1):
    a =[]
    for j in range(C1):
         a.append(matrix1[i][j]+matrix2[i][j])
    result.append(a)
matrix = np.array(result)
print(matrix)



import numpy as np
n1 = [[7,8,9]]
n2 = [[1,2,3,4,5,6,7,8,9]]
print(np.intersect1d(n1,n2))

expression = input()
res = expression
for char in expression:
    if char.isalpha():
        res = res.replace(char,"*"+char)
print(res)

expression = input()
res = ""
for char in expression:
    if char.isalpha():
        res = res+"*"+char
    else:
        res = res +char
print(res)

from sympy import symbols,expand
x,y = symbols('x,y')
expression = input()
print(expand(expression))

n = int(input())
print("{:,}".format(n))

